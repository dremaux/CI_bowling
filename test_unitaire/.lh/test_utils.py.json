{
    "sourceFile": "test_utils.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 74,
            "patches": [
                {
                    "date": 1669041695894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1669041846562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         self.assertFalse(utils.is_prime(8))\r\n         self.assertFalse(utils.is_prime(10))\r\n         self.assertTrue(utils.is_prime(7))\r\n         self.assertEqual(utils.is_prime(-3),\r\n-                         \"Negative numbers are not allowed\")\r\n+                         \"Les nombres négatifs ne sont pas autorisés\")\r\n \r\n \r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669041935972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,8 @@\n         self.assertTrue(utils.is_prime(3))\r\n         self.assertFalse(utils.is_prime(8))\r\n         self.assertFalse(utils.is_prime(10))\r\n         self.assertTrue(utils.is_prime(7))\r\n-        self.assertEqual(utils.is_prime(-3),\r\n-                         \"Les nombres négatifs ne sont pas autorisés\")\r\n \r\n \r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669042052203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,7 +11,23 @@\n         self.assertFalse(utils.is_prime(8))\r\n         self.assertFalse(utils.is_prime(10))\r\n         self.assertTrue(utils.is_prime(7))\r\n \r\n+class TestUtils(unittest.TestCase):\r\n+    def test_is_prime(self):\r\n+        ...\r\n \r\n+    def test_cubic(self):\r\n+        self.assertEqual(utils.cubic(2), 8)\r\n+        self.assertEqual(utils.cubic(-2), -8)\r\n+        self.assertNotEqual(utils.cubic(2), 4)\r\n+        self.assertNotEqual(utils.cubic(-3), 27)\r\n+\r\n+    def test_say_hello(self):\r\n+        self.assertEqual(utils.say_hello(\"Geekflare\"), \"Hello, Geekflare\")\r\n+        self.assertEqual(utils.say_hello(\"Chandan\"), \"Hello, Chandan\")\r\n+        self.assertNotEqual(utils.say_hello(\"Chandan\"), \"Hi, Chandan\")\r\n+        self.assertNotEqual(utils.say_hello(\"Hafeez\"), \"Hi, Hafeez\")\r\n+\r\n+\r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669042064093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,14 +4,9 @@\n \r\n \r\n class TestUtils(unittest.TestCase):\r\n     def test_is_prime(self):\r\n-        self.assertFalse(utils.is_prime(4))\r\n-        self.assertTrue(utils.is_prime(2))\r\n-        self.assertTrue(utils.is_prime(3))\r\n-        self.assertFalse(utils.is_prime(8))\r\n-        self.assertFalse(utils.is_prime(10))\r\n-        self.assertTrue(utils.is_prime(7))\r\n+        \r\n \r\n class TestUtils(unittest.TestCase):\r\n     def test_is_prime(self):\r\n         ...\r\n"
                },
                {
                    "date": 1669042075839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,17 @@\n import unittest\r\n \r\n import utils\r\n-\r\n-\r\n-class TestUtils(unittest.TestCase):\r\n-    def test_is_prime(self):\r\n         \r\n \r\n class TestUtils(unittest.TestCase):\r\n     def test_is_prime(self):\r\n-        ...\r\n+        self.assertFalse(utils.is_prime(4))\r\n+        self.assertTrue(utils.is_prime(2))\r\n+        self.assertTrue(utils.is_prime(3))\r\n+        self.assertFalse(utils.is_prime(8))\r\n+        self.assertFalse(utils.is_prime(10))\r\n+        self.assertTrue(utils.is_prime(7))\r\n \r\n     def test_cubic(self):\r\n         self.assertEqual(utils.cubic(2), 8)\r\n         self.assertEqual(utils.cubic(-2), -8)\r\n"
                },
                {
                    "date": 1669042095391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import unittest\r\n \r\n-import utils\r\n-        \r\n+import utils      \r\n \r\n class TestUtils(unittest.TestCase):\r\n     def test_is_prime(self):\r\n         self.assertFalse(utils.is_prime(4))\r\n@@ -18,9 +17,9 @@\n         self.assertNotEqual(utils.cubic(2), 4)\r\n         self.assertNotEqual(utils.cubic(-3), 27)\r\n \r\n     def test_say_hello(self):\r\n-        self.assertEqual(utils.say_hello(\"Geekflare\"), \"Hello, Geekflare\")\r\n+        self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, Geekflare\")\r\n         self.assertEqual(utils.say_hello(\"Chandan\"), \"Hello, Chandan\")\r\n         self.assertNotEqual(utils.say_hello(\"Chandan\"), \"Hi, Chandan\")\r\n         self.assertNotEqual(utils.say_hello(\"Hafeez\"), \"Hi, Hafeez\")\r\n \r\n"
                },
                {
                    "date": 1669042104519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n         self.assertNotEqual(utils.cubic(2), 4)\r\n         self.assertNotEqual(utils.cubic(-3), 27)\r\n \r\n     def test_say_hello(self):\r\n-        self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, Geekflare\")\r\n-        self.assertEqual(utils.say_hello(\"Chandan\"), \"Hello, Chandan\")\r\n+        self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, lucas\")\r\n+        self.assertEqual(utils.say_hello(\"eden\"), \"Hello, Chandan\")\r\n         self.assertNotEqual(utils.say_hello(\"Chandan\"), \"Hi, Chandan\")\r\n         self.assertNotEqual(utils.say_hello(\"Hafeez\"), \"Hi, Hafeez\")\r\n \r\n \r\n"
                },
                {
                    "date": 1669042110550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         self.assertNotEqual(utils.cubic(-3), 27)\r\n \r\n     def test_say_hello(self):\r\n         self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, lucas\")\r\n-        self.assertEqual(utils.say_hello(\"eden\"), \"Hello, Chandan\")\r\n+        self.assertEqual(utils.say_hello(\"eden\"), \"Hello, enden\")\r\n         self.assertNotEqual(utils.say_hello(\"Chandan\"), \"Hi, Chandan\")\r\n         self.assertNotEqual(utils.say_hello(\"Hafeez\"), \"Hi, Hafeez\")\r\n \r\n \r\n"
                },
                {
                    "date": 1669042124244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n         self.assertNotEqual(utils.cubic(-3), 27)\r\n \r\n     def test_say_hello(self):\r\n         self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, lucas\")\r\n-        self.assertEqual(utils.say_hello(\"eden\"), \"Hello, enden\")\r\n-        self.assertNotEqual(utils.say_hello(\"Chandan\"), \"Hi, Chandan\")\r\n+        self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n+        self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"Hafeez\"), \"Hi, Hafeez\")\r\n \r\n \r\n if __name__ == '__main__':\r\n"
                },
                {
                    "date": 1669045147783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n     def test_say_hello(self):\r\n         self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, lucas\")\r\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n-        self.assertNotEqual(utils.say_hello(\"Hafeez\"), \"Hi, Hafeez\")\r\n+        self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n \r\n+\r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669046004533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,8 @@\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n+&&\r\n \r\n-\r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669046009595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,8 @@\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n-&&\r\n \r\n+\r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669046044024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,8 @@\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n+#\r\n \r\n-\r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669046237603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,8 @@\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n-#\r\n+#lancement des test\r\n \r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669046243023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n \r\n import utils      \r\n \r\n class TestUtils(unittest.TestCase):\r\n+    \r\n     def test_is_prime(self):\r\n         self.assertFalse(utils.is_prime(4))\r\n         self.assertTrue(utils.is_prime(2))\r\n         self.assertTrue(utils.is_prime(3))\r\n@@ -22,8 +23,8 @@\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n-#lancement des test\r\n+#lancement des tests\r\n \r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669046297499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n import utils      \r\n \r\n class TestUtils(unittest.TestCase):\r\n-    \r\n+    #lancement des \r\n     def test_is_prime(self):\r\n         self.assertFalse(utils.is_prime(4))\r\n         self.assertTrue(utils.is_prime(2))\r\n         self.assertTrue(utils.is_prime(3))\r\n"
                },
                {
                    "date": 1669046366820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n import utils      \r\n \r\n class TestUtils(unittest.TestCase):\r\n-    #lancement des \r\n+    #lancement des méthodes\r\n     def test_is_prime(self):\r\n         self.assertFalse(utils.is_prime(4))\r\n         self.assertTrue(utils.is_prime(2))\r\n         self.assertTrue(utils.is_prime(3))\r\n"
                },
                {
                    "date": 1669046436669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import utils      \r\n \r\n class TestUtils(unittest.TestCase):\r\n     #lancement des méthodes\r\n+    \r\n     def test_is_prime(self):\r\n         self.assertFalse(utils.is_prime(4))\r\n         self.assertTrue(utils.is_prime(2))\r\n         self.assertTrue(utils.is_prime(3))\r\n"
                },
                {
                    "date": 1669046445157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n+#impo\r\n import unittest\r\n \r\n import utils      \r\n \r\n class TestUtils(unittest.TestCase):\r\n     #lancement des méthodes\r\n-    \r\n+\r\n     def test_is_prime(self):\r\n         self.assertFalse(utils.is_prime(4))\r\n         self.assertTrue(utils.is_prime(2))\r\n         self.assertTrue(utils.is_prime(3))\r\n"
                },
                {
                    "date": 1669046451252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#impo\r\n+#import unittest\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046512685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#import unittest\r\n+#import unittest classe pour \r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046517868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#import unittest classe pour \r\n+#import unittest classe pour faire te\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046526219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#import unittest classe pour faire te\r\n+#import unittest classe pour les methodes suivant\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046534843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,66 @@\n #import unittest classe pour les methodes suivant\r\n+assertEqual(a, b)\r\n+\r\n+a == b\r\n+\r\n+assertNotEqual(a, b)\r\n+\r\n+a != b\r\n+\r\n+assertTrue(x)\r\n+\r\n+bool(x) is True\r\n+\r\n+assertFalse(x)\r\n+\r\n+bool(x) is False\r\n+\r\n+assertIs(a, b)\r\n+\r\n+a is b\r\n+\r\n+3.1\r\n+\r\n+assertIsNot(a, b)\r\n+\r\n+a is not b\r\n+\r\n+3.1\r\n+\r\n+assertIsNone(x)\r\n+\r\n+x is None\r\n+\r\n+3.1\r\n+\r\n+assertIsNotNone(x)\r\n+\r\n+x is not None\r\n+\r\n+3.1\r\n+\r\n+assertIn(a, b)\r\n+\r\n+a in b\r\n+\r\n+3.1\r\n+\r\n+assertNotIn(a, b)\r\n+\r\n+a not in b\r\n+\r\n+3.1\r\n+\r\n+assertIsInstance(a, b)\r\n+\r\n+isinstance(a, b)\r\n+\r\n+3.2\r\n+\r\n+assertNotIsInstance(a, b)\r\n+\r\n+not isinstance(a, b)\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046544012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,66 +1,6 @@\n-#import unittest classe pour les methodes suivant\r\n-assertEqual(a, b)\r\n+import unittest classe pour les methodes suivant\r\n \r\n-a == b\r\n-\r\n-assertNotEqual(a, b)\r\n-\r\n-a != b\r\n-\r\n-assertTrue(x)\r\n-\r\n-bool(x) is True\r\n-\r\n-assertFalse(x)\r\n-\r\n-bool(x) is False\r\n-\r\n-assertIs(a, b)\r\n-\r\n-a is b\r\n-\r\n-3.1\r\n-\r\n-assertIsNot(a, b)\r\n-\r\n-a is not b\r\n-\r\n-3.1\r\n-\r\n-assertIsNone(x)\r\n-\r\n-x is None\r\n-\r\n-3.1\r\n-\r\n-assertIsNotNone(x)\r\n-\r\n-x is not None\r\n-\r\n-3.1\r\n-\r\n-assertIn(a, b)\r\n-\r\n-a in b\r\n-\r\n-3.1\r\n-\r\n-assertNotIn(a, b)\r\n-\r\n-a not in b\r\n-\r\n-3.1\r\n-\r\n-assertIsInstance(a, b)\r\n-\r\n-isinstance(a, b)\r\n-\r\n-3.2\r\n-\r\n-assertNotIsInstance(a, b)\r\n-\r\n-not isinstance(a, b)\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046551531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n-import unittest classe pour les methodes suivant\r\n+# import unittest classe pour les methodes suivant\r\n \r\n+\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046563218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n # import unittest classe pour les methodes suivant\r\n+assert\r\n \r\n-\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046570095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n # import unittest classe pour les methodes suivant\r\n-assert\r\n+assertEqual(a,)\r\n \r\n import unittest\r\n \r\n import utils      \r\n"
                },
                {
                    "date": 1669046577035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n # import unittest classe pour les methodes suivant\r\n-assertEqual(a,)\r\n+assertEqual(a,b)\r\n \r\n+\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046582715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n # import unittest classe pour les methodes suivant\r\n assertEqual(a,b)\r\n+assertNoEqual\r\n \r\n-\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046588802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n # import unittest classe pour les methodes suivant\r\n-assertEqual(a,b)\r\n-assertNoEqual\r\n+assertEqual(a, b)\r\n+assertNoEqual(a, b)\r\n \r\n import unittest\r\n \r\n import utils      \r\n"
                },
                {
                    "date": 1669046593907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n # import unittest classe pour les methodes suivant\r\n assertEqual(a, b)\r\n-assertNoEqual(a, b)\r\n+assertNotEqual(a, b)\r\n \r\n import unittest\r\n \r\n import utils      \r\n"
                },
                {
                    "date": 1669046619979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n # import unittest classe pour les methodes suivant\r\n assertEqual(a, b)\r\n assertNotEqual(a, b)\r\n+assert\r\n \r\n import unittest\r\n \r\n import utils      \r\n"
                },
                {
                    "date": 1669046628524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n # import unittest classe pour les methodes suivant\r\n assertEqual(a, b)\r\n assertNotEqual(a, b)\r\n-assert\r\n+assertTrue(x)\r\n+asser\r\n \r\n import unittest\r\n \r\n import utils      \r\n"
                },
                {
                    "date": 1669046635545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n # import unittest classe pour les methodes suivant\r\n assertEqual(a, b)\r\n assertNotEqual(a, b)\r\n assertTrue(x)\r\n-asser\r\n+assert\r\n \r\n import unittest\r\n \r\n import utils      \r\n"
                },
                {
                    "date": 1669046642014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n # import unittest classe pour les methodes suivant\r\n assertEqual(a, b)\r\n assertNotEqual(a, b)\r\n assertTrue(x)\r\n-assert\r\n+assertFalse(x)\r\n \r\n+\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669046663575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n # import unittest classe pour les methodes suivant\r\n-assertEqual(a, b)\r\n-assertNotEqual(a, b)\r\n-assertTrue(x)\r\n-assertFalse(x)\r\n+# assertEqual(a, b)\r\n+# assertNotEqual(a, b)\r\n+# assertTrue(x)\r\n+# assertFalse(x)\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669282037564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,8 @@\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n+\r\n #lancement des tests\r\n-\r\n if __name__ == '__main__':\r\n     unittest.main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669282987674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         self.assertNotEqual(utils.cubic(2), 4)\r\n         self.assertNotEqual(utils.cubic(-3), 27)\r\n \r\n     def test_say_hello(self):\r\n-        self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, lucas\")\r\n+        self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, ltucas\")\r\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n"
                },
                {
                    "date": 1669283011340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         self.assertNotEqual(utils.cubic(2), 4)\r\n         self.assertNotEqual(utils.cubic(-3), 27)\r\n \r\n     def test_say_hello(self):\r\n-        self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, ltucas\")\r\n+        self.assertEqual(utils.say_hello(\"lucas\"), \"Hello, lucas\")\r\n         self.assertEqual(utils.say_hello(\"eden\"), \"Hello, eden\")\r\n         self.assertNotEqual(utils.say_hello(\"lucas\"), \"Hi, lucas\")\r\n         self.assertNotEqual(utils.say_hello(\"eden\"), \"Hi, eden\")\r\n \r\n"
                },
                {
                    "date": 1669284027318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n # assertTrue(x)\r\n # assertFalse(x)\r\n \r\n \r\n+\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669284035990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,11 @@\n # assertEqual(a, b)\r\n # assertNotEqual(a, b)\r\n # assertTrue(x)\r\n # assertFalse(x)\r\n+assertIs \r\n \r\n \r\n-\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669284043664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n # assertEqual(a, b)\r\n # assertNotEqual(a, b)\r\n # assertTrue(x)\r\n # assertFalse(x)\r\n-assertIs \r\n+assertIs(a, b)\r\n+assert\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284051421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n # assertNotEqual(a, b)\r\n # assertTrue(x)\r\n # assertFalse(x)\r\n assertIs(a, b)\r\n-assert\r\n+assertIsNot(a, b)\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284061292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n # assertTrue(x)\r\n # assertFalse(x)\r\n assertIs(a, b)\r\n assertIsNot(a, b)\r\n+assertIsNone\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284067875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n # assertTrue(x)\r\n # assertFalse(x)\r\n assertIs(a, b)\r\n assertIsNot(a, b)\r\n-assertIsNone\r\n+assertIsNone(x)\r\n+assert\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284079349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n # assertFalse(x)\r\n assertIs(a, b)\r\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n-assert\r\n+assertIsNotNone\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284087326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n # assertFalse(x)\r\n assertIs(a, b)\r\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n-assertIsNotNone\r\n+assertIsNotNone(x)\r\n+assert\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284093998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n assertIs(a, b)\r\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n-assert\r\n+assertIn(a, b)\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284099104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n+asser\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284104676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n-asser\r\n+assertN\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284111245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n-assertN\r\n+assertNotIn()\r\n \r\n \r\n import unittest\r\n \r\n"
                },
                {
                    "date": 1669284117301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,12 @@\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n-assertNotIn()\r\n+assertNotIn(a, break)\r\n \r\n \r\n+\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669284127554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n assertIsNot(a, b)\r\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n-assertNotIn(a, break)\r\n+assertNotIn(a, b)\r\n+assert\r\n \r\n \r\n \r\n import unittest\r\n"
                },
                {
                    "date": 1669284133271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n assertNotIn(a, b)\r\n-assert\r\n+assertIs\r\n \r\n \r\n \r\n import unittest\r\n"
                },
                {
                    "date": 1669284198462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n assertNotIn(a, b)\r\n-assertIs\r\n+assertIsInstance\r\n \r\n \r\n \r\n import unittest\r\n"
                },
                {
                    "date": 1669284204357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,13 @@\n assertIsNone(x)\r\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n assertNotIn(a, b)\r\n-assertIsInstance\r\n+assertIsInstance(a, b)\r\n \r\n \r\n \r\n+\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669284212111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,12 @@\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n assertNotIn(a, b)\r\n assertIsInstance(a, b)\r\n+assert\r\n \r\n \r\n \r\n-\r\n import unittest\r\n \r\n import utils      \r\n \r\n"
                },
                {
                    "date": 1669284218878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n assertNotIn(a, b)\r\n assertIsInstance(a, b)\r\n-assert\r\n+assertNotIsInstance\r\n \r\n \r\n \r\n import unittest\r\n"
                },
                {
                    "date": 1669284224403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n assertIsNotNone(x)\r\n assertIn(a, b)\r\n assertNotIn(a, b)\r\n assertIsInstance(a, b)\r\n-assertNotIsInstance\r\n+assertNotIsInstance(a)\r\n \r\n \r\n \r\n import unittest\r\n"
                },
                {
                    "date": 1669284231457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,16 @@\n # assertEqual(a, b)\r\n # assertNotEqual(a, b)\r\n # assertTrue(x)\r\n # assertFalse(x)\r\n-assertIs(a, b)\r\n-assertIsNot(a, b)\r\n-assertIsNone(x)\r\n-assertIsNotNone(x)\r\n-assertIn(a, b)\r\n-assertNotIn(a, b)\r\n-assertIsInstance(a, b)\r\n-assertNotIsInstance(a)\r\n+# assertIs(a, b)\r\n+# assertIsNot(a, b)\r\n+# assertIsNone(x)\r\n+# assertIsNotNone(x)\r\n+# assertIn(a, b)\r\n+# assertNotIn(a, b)\r\n+# assertIsInstance(a, b)\r\n+# assertNotIsInstance(a, b)\r\n \r\n \r\n \r\n import unittest\r\n"
                },
                {
                    "date": 1669284279284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n # import unittest classe pour les methodes suivant\r\n-# assertEqual(a, b)\r\n+# assertEqual(a, b)     \r\n # assertNotEqual(a, b)\r\n # assertTrue(x)\r\n # assertFalse(x)\r\n # assertIs(a, b)\r\n"
                },
                {
                    "date": 1669284285189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n # import unittest classe pour les methodes suivant\r\n-# assertEqual(a, b)     \r\n+# assertEqual(a, b)             a == b\r\n # assertNotEqual(a, b)\r\n # assertTrue(x)\r\n # assertFalse(x)\r\n # assertIs(a, b)\r\n"
                },
                {
                    "date": 1669284294457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n # import unittest classe pour les methodes suivant\r\n # assertEqual(a, b)             a == b\r\n-# assertNotEqual(a, b)\r\n+# assertNotEqual(a, b)          a != b\r\n # assertTrue(x)\r\n # assertFalse(x)\r\n # assertIs(a, b)\r\n # assertIsNot(a, b)\r\n"
                },
                {
                    "date": 1669284324688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n # import unittest classe pour les methodes suivant\r\n # assertEqual(a, b)             a == b\r\n # assertNotEqual(a, b)          a != b\r\n-# assertTrue(x)\r\n+# assertTrue(x)                 bool(x)\r\n # assertFalse(x)\r\n # assertIs(a, b)\r\n # assertIsNot(a, b)\r\n # assertIsNone(x)\r\n"
                },
                {
                    "date": 1669284333395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n # import unittest classe pour les methodes suivant\r\n # assertEqual(a, b)             a == b\r\n # assertNotEqual(a, b)          a != b\r\n-# assertTrue(x)                 bool(x)\r\n-# assertFalse(x)\r\n+# assertTrue(x)                 bool(x) is true\r\n+# assertFalse(x)                bool\r\n # assertIs(a, b)\r\n # assertIsNot(a, b)\r\n # assertIsNone(x)\r\n # assertIsNotNone(x)\r\n"
                },
                {
                    "date": 1669284340076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n # import unittest classe pour les methodes suivant\r\n # assertEqual(a, b)             a == b\r\n # assertNotEqual(a, b)          a != b\r\n # assertTrue(x)                 bool(x) is true\r\n-# assertFalse(x)                bool\r\n+# assertFalse(x)                bool(x) is False\r\n # assertIs(a, b)\r\n # assertIsNot(a, b)\r\n # assertIsNone(x)\r\n # assertIsNotNone(x)\r\n"
                },
                {
                    "date": 1669284345403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n # import unittest classe pour les methodes suivant\r\n # assertEqual(a, b)             a == b\r\n # assertNotEqual(a, b)          a != b\r\n-# assertTrue(x)                 bool(x) is true\r\n+# assertTrue(x)                 bool(x) is True\r\n # assertFalse(x)                bool(x) is False\r\n-# assertIs(a, b)\r\n+# assertIs(a, b)                \r\n # assertIsNot(a, b)\r\n # assertIsNone(x)\r\n # assertIsNotNone(x)\r\n # assertIn(a, b)\r\n"
                },
                {
                    "date": 1669284350664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,10 @@\n # assertEqual(a, b)             a == b\r\n # assertNotEqual(a, b)          a != b\r\n # assertTrue(x)                 bool(x) is True\r\n # assertFalse(x)                bool(x) is False\r\n-# assertIs(a, b)                \r\n-# assertIsNot(a, b)\r\n+# assertIs(a, b)                a is b\r\n+# assertIsNot(a, b)             \r\n # assertIsNone(x)\r\n # assertIsNotNone(x)\r\n # assertIn(a, b)\r\n # assertNotIn(a, b)\r\n"
                },
                {
                    "date": 1669284355904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n # assertNotEqual(a, b)          a != b\r\n # assertTrue(x)                 bool(x) is True\r\n # assertFalse(x)                bool(x) is False\r\n # assertIs(a, b)                a is b\r\n-# assertIsNot(a, b)             \r\n+# assertIsNot(a, b)             a is not b\r\n # assertIsNone(x)\r\n # assertIsNotNone(x)\r\n # assertIn(a, b)\r\n # assertNotIn(a, b)\r\n"
                },
                {
                    "date": 1669284376043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n # assertTrue(x)                 bool(x) is True\r\n # assertFalse(x)                bool(x) is False\r\n # assertIs(a, b)                a is b\r\n # assertIsNot(a, b)             a is not b\r\n-# assertIsNone(x)\r\n+# assertIsNone(x)               d\r\n # assertIsNotNone(x)\r\n # assertIn(a, b)\r\n # assertNotIn(a, b)\r\n # assertIsInstance(a, b)\r\n"
                },
                {
                    "date": 1669284418288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n # assertTrue(x)                 bool(x) is True\r\n # assertFalse(x)                bool(x) is False\r\n # assertIs(a, b)                a is b\r\n # assertIsNot(a, b)             a is not b\r\n-# assertIsNone(x)               d\r\n+# assertIsNone(x)               x is \r\n # assertIsNotNone(x)\r\n # assertIn(a, b)\r\n # assertNotIn(a, b)\r\n # assertIsInstance(a, b)\r\n"
                },
                {
                    "date": 1669284428932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n # assertTrue(x)                 bool(x) is True\r\n # assertFalse(x)                bool(x) is False\r\n # assertIs(a, b)                a is b\r\n # assertIsNot(a, b)             a is not b\r\n-# assertIsNone(x)               x is \r\n-# assertIsNotNone(x)\r\n+# assertIsNone(x)               x is  None\r\n+# assertIsNotNone(x)            x is not None\r\n # assertIn(a, b)\r\n # assertNotIn(a, b)\r\n # assertIsInstance(a, b)\r\n # assertNotIsInstance(a, b)\r\n"
                },
                {
                    "date": 1669284435938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n # assertIsNot(a, b)             a is not b\r\n # assertIsNone(x)               x is  None\r\n # assertIsNotNone(x)            x is not None\r\n # assertIn(a, b)                a in b\r\n-# assertNotIn(a, b)\r\n+# assertNotIn(a, b) \r\n # assertIsInstance(a, b)\r\n # assertNotIsInstance(a, b)\r\n \r\n \r\n"
                }
            ],
            "date": 1669041695894,
            "name": "Commit-0",
            "content": "import unittest\r\n\r\nimport utils\r\n\r\n\r\nclass TestUtils(unittest.TestCase):\r\n    def test_is_prime(self):\r\n        self.assertFalse(utils.is_prime(4))\r\n        self.assertTrue(utils.is_prime(2))\r\n        self.assertTrue(utils.is_prime(3))\r\n        self.assertFalse(utils.is_prime(8))\r\n        self.assertFalse(utils.is_prime(10))\r\n        self.assertTrue(utils.is_prime(7))\r\n        self.assertEqual(utils.is_prime(-3),\r\n                         \"Negative numbers are not allowed\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()"
        }
    ]
}